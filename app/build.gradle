plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.devtools.ksp'
    id 'kotlin-parcelize'
    id 'com.google.dagger.hilt.android'
    id 'com.google.gms.google-services'
    id 'com.google.protobuf' version "0.9.4"
    id 'kotlin-kapt'
}
android {
    namespace 'and.drew.nkhukumanagement'
    compileSdk 34

    defaultConfig {
        applicationId "and.drew.nkhukumanagement"
        minSdk 25
        targetSdk 34
        versionCode 1
        versionName "1.0"

        //testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunner "and.drew.nkhukumanagement.CustomTestRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    // Allow references to generated code
    kapt {
        correctErrorTypes = true
    }

    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.4.7'
    }

    testOptions {
        animationsDisabled = true
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {
    implementation "androidx.navigation:navigation-compose:$nav_version"
    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.2'
    implementation 'androidx.activity:activity-compose:1.8.1'
    implementation "androidx.compose.ui:ui:$compose_ui_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_ui_version"
    implementation 'androidx.compose.material3:material3:1.1.2'
    implementation 'androidx.compose.material3:material3-window-size-class:1.1.2'
    implementation "androidx.compose.material:material-icons-extended"
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:2.6.2"
    implementation 'com.google.android.gms:play-services-auth:20.7.0'
    implementation 'androidx.test:core-ktx:1.5.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_ui_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_ui_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_ui_version"
    implementation("androidx.core:core-splashscreen:1.0.1")

    implementation("androidx.room:room-runtime:$room_version")
    annotationProcessor("androidx.room:room-compiler:$room_version")

    // To use Kotlin Symbol Processing (KSP)
    ksp("androidx.room:room-compiler:$room_version")
    implementation "androidx.room:room-ktx:$room_version"

    //Hilt
    implementation 'androidx.hilt:hilt-navigation-compose:1.1.0'
    implementation 'com.google.dagger:hilt-android:2.48'
    kapt 'com.google.dagger:hilt-compiler:2.48'

    //Hilt WorkManager
    implementation 'androidx.hilt:hilt-work:1.1.0'
    kapt 'androidx.hilt:hilt-compiler:1.1.0'
    //Test Kotlin
    testImplementation("com.google.dagger:hilt-android-compiler:2.48")
    kaptTest("com.google.dagger:hilt-android-compiler:2.48")
    //For instrumented tests
    androidTestImplementation("com.google.dagger:hilt-android-testing:2.48")
    //....with kotlin
    kaptAndroidTest("com.google.dagger:hilt-android-compiler:2.48")


    // WorkManager Kotlin + coroutines
    implementation "androidx.work:work-runtime-ktx:$work_version"

    // Import the Firebase BoM
    implementation(platform("com.google.firebase:firebase-bom:32.3.1"))

    // When using the BoM, don't specify versions in Firebase dependencies
    implementation("com.google.firebase:firebase-analytics-ktx")
    implementation("com.google.firebase:firebase-auth-ktx")

    // Declare the dependency for the Cloud Firestore library
    // When using the BoM, you don't specify versions in Firebase library dependencies
    implementation("com.google.firebase:firebase-firestore-ktx")

    //Coil Library
    implementation("io.coil-kt:coil-compose:2.5.0")
    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    // Lifecycle utilities for Compose
    implementation "androidx.lifecycle:lifecycle-runtime-compose:$lifecycle_version"
    //DataStore
    implementation("androidx.datastore:datastore-preferences:1.0.0")
    //Proto DataStore
    implementation("androidx.datastore:datastore:1.0.0")
    //Protobuf
    implementation "com.google.protobuf:protobuf-javalite:3.24.1"
    //ListDetailScaffold
    implementation("androidx.compose.material3:material3-adaptive-android:1.0.0-alpha03")
    //NavigationBar/NavigationRail
    implementation("androidx.compose.material3:material3-adaptive-navigation-suite-android:1.0.0-alpha02")
    //Navigation Test
    androidTestImplementation "androidx.navigation:navigation-testing:$nav_version"
    //Test rules and transitive dependencies
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_ui_version"
    //Needed for createAndroidComposeRule, but not createComposeRule
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_ui_version"
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.24.1"
    }
    // Generates the java Protobuf-lite code for the Protobufs in this project. See
    // https://github.com/google/protobuf-gradle-plugin#customizing-protobuf-compilation
    // for more information.
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    option 'lite'
                }
            }
        }
    }
}
